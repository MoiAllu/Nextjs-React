{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aliabbasi/Documents/NextJS react/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport NewDetailPage from \"../../components/meetups/newDetailPage\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Head from \"next/head\";\n\nvar newDescription = function newDescription(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.CarXData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: props.CarXData.title,\n        content: props.CarXData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(NewDetailPage, {\n      image: props.CarXData.image,\n      title: props.CarXData.title,\n      description: props.CarXData.description,\n      address: props.CarXData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, _this);\n};\n\nexport var __N_SSG = true;\nexport default newDescription;","map":{"version":3,"sources":["/Users/aliabbasi/Documents/NextJS react/pages/[meetupId]/index.js"],"names":["NewDetailPage","Fragment","Head","newDescription","props","CarXData","title","description","image","address"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AAEA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,QAAN,CAAeC;AAAvB;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAEF,KAAK,CAACC,QAAN,CAAeC,KAA3B;AAAkC,QAAA,OAAO,EAAEF,KAAK,CAACC,QAAN,CAAeE;AAA1D;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI,QAAC,aAAD;AACJ,MAAA,KAAK,EAAEH,KAAK,CAACC,QAAN,CAAeG,KADlB;AAEJ,MAAA,KAAK,EAAEJ,KAAK,CAACC,QAAN,CAAeC,KAFlB;AAGJ,MAAA,WAAW,EAAEF,KAAK,CAACC,QAAN,CAAeE,WAHxB;AAIJ,MAAA,OAAO,EAAEH,KAAK,CAACC,QAAN,CAAeI;AAJpB;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAeD,CAhBD;;;AAuDA,eAAeN,cAAf","sourcesContent":["import NewDetailPage from \"../../components/meetups/newDetailPage\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Head from \"next/head\";\nconst newDescription = (props) => {\n  return (\n      <Fragment>\n          <Head>\n              <title>{props.CarXData.title}</title>\n              <meta name={props.CarXData.title} content={props.CarXData.description} />\n          </Head>\n          <NewDetailPage\n      image={props.CarXData.image}\n      title={props.CarXData.title}\n      description={props.CarXData.description}\n      address={props.CarXData.address}\n    />\n      </Fragment>\n    \n  );\n};\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://AliQans:lawaA123@cluster0.r2ac1.mongodb.net/carX?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const carsCollection = db.collection(\"carX\");\n  const carX_Dettail = await carsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: carX_Dettail.map((Genrated) => ({\n      params: { meetupId: Genrated._id.toString() },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  const contextPath = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://AliQans:lawaA123@cluster0.r2ac1.mongodb.net/carX?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const carsCollection = db.collection(\"carX\");\n  const selectedCar = await carsCollection.findOne({ _id: ObjectId(contextPath) });\n  client.close();\n  console.log(contextPath);\n  return {\n    props: {\n      CarXData: {\n        id: selectedCar._id.toString(),\n        image:selectedCar.image,\n        title: selectedCar.title,\n        address: selectedCar.address,\n        description: selectedCar.description,\n      },\n    },\n    revalidate: 1,\n  };\n}\nexport default newDescription;\n"]},"metadata":{},"sourceType":"module"}