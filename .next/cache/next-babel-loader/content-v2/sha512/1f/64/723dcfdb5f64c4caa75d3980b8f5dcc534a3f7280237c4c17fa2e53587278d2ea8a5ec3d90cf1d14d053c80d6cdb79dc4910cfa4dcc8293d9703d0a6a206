{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aliabbasi/Documents/NextJS react/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport NewDetailPage from \"../../components/meetups/newDetailPage\";\n\nvar newDescription = function newDescription() {\n  return /*#__PURE__*/_jsxDEV(NewDetailPage, {\n    image: \"https://c4.wallpaperflare.com/wallpaper/451/732/57/nissan-gtr-r35-red-car-wallpaper-preview.jpg\",\n    title: \"Nissan GTR R34\",\n    description: \"A rocket bunny kit attached to 2019 Gtr, where Hks mid pige,Hks turbo,Hks ECU, has been upgraded.\",\n    address: \"Malborne, Australia\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n};\n\nexport var __N_SSG = true;\nexport default newDescription;","map":{"version":3,"sources":["/Users/aliabbasi/Documents/NextJS react/pages/[meetupId]/index.js"],"names":["NewDetailPage","newDescription"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,iGADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,WAAW,EAAC,mGAHd;AAIE,IAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;;AA0CA,eAAeA,cAAf","sourcesContent":["import NewDetailPage from \"../../components/meetups/newDetailPage\";\nimport { MongoClient } from \"mongodb\";\nconst newDescription = () => {\n  return (\n    <NewDetailPage\n      image=\"https://c4.wallpaperflare.com/wallpaper/451/732/57/nissan-gtr-r35-red-car-wallpaper-preview.jpg\"\n      title=\"Nissan GTR R34\"\n      description=\"A rocket bunny kit attached to 2019 Gtr, where Hks mid pige,Hks turbo,Hks ECU, has been upgraded.\"\n      address=\"Malborne, Australia\"\n    />\n  );\n};\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://AliQans:lawaA123@cluster0.r2ac1.mongodb.net/carX?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const carsCollection = db.collection(\"carX\");\n  const carX_Dettail = await carsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: carX_Dettail.map(Genrated => ({\n      params: { meetupId: Genrated._id.toString() },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  const contextPath = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://AliQans:lawaA123@cluster0.r2ac1.mongodb.net/carX?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const carsCollection = db.collection(\"carX\");\n  const selectedCar=carsCollection.findOne({_id: meetupId});\n  client.close();\n  console.log(contextPath);\n  return {\n    props: {\n        meetupData:selectedCar,\n    },\n    revalidate: 1,\n  };\n}\nexport default newDescription;\n"]},"metadata":{},"sourceType":"module"}